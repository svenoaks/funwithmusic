package com.smp.funwithmusic.activities;

import static com.smp.funwithmusic.utilities.Constants.*;
import static com.smp.funwithmusic.utilities.UtilityMethods.*;

import java.util.ArrayList;

import com.afollestad.cardsui.Card;
import com.afollestad.cardsui.CardAdapter;
import com.afollestad.cardsui.CardBase;
import com.afollestad.cardsui.CardListView;
import com.afollestad.cardsuisample.CustomActivity;
import com.afollestad.cardsuisample.MainActivity;
import com.smp.funwithmusic.R;
import com.smp.funwithmusic.R.id;
import com.smp.funwithmusic.R.layout;
import com.smp.funwithmusic.objects.MusicCard;
import com.smp.funwithmusic.objects.Song;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;

public class FlowActivity extends Activity
{
	ArrayList<String> songs;
	private IntentFilter filter;
	private UpdateActivityReceiver receiver;
	
	private class UpdateActivityReceiver extends BroadcastReceiver
	{

		@Override
		public void onReceive(Context context, Intent intent)
		{
			addCardsFromList();
		}

	}

	@Override
	protected void onPause()
	{
		super.onPause();

		unregisterReceiver(receiver);
	}

	@Override
	protected void onResume()
	{
		super.onResume();
		addCardsFromList();
		registerReceiver(receiver, filter);
	}

	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_steve);

		 CardAdapter<Card> cardsAdapter = new CardAdapter<Card>(this)
	                .setAccentColorRes(android.R.color.holo_blue_light)
	                .setPopupMenu(R.menu.card_popup, this); // the popup menu callback is this activity

	        CardListView cardsList = (CardListView) findViewById(R.id.cardsList);
	        cardsList.setAdapter(cardsAdapter);
	        cardsList.setOnCardClickListener(new CardListView.CardClickListener() {
	            @Override
	            public void onCardClick(int index, CardBase card, View view) {
	                if (index == 0) {
	                    startActivity(new Intent(MainActivity.this, CustomActivity.class));
	                }
	            }
	        });

		filter = new IntentFilter(SONG_ACTION);
		filter.addCategory(Intent.CATEGORY_DEFAULT);

		receiver = new UpdateActivityReceiver();

		// TestCards();
	}

	private void addCardsFromList()
	{
		ArrayList<Song> songs = getSongList(this);
		if (this.songs == null || this.songs.size() != songs.size())
		{
			mCardView.clearCards();
			for (Song song : songs)
			{
				addCard(song);
			}
			mCardView.refresh();
		}
	}

	// Adds to same stack if the artist is the same.

	private void addCard(Song song)
	{
		if (lastStack != null)
		{
			ArrayList<Card> lastCards = lastStack.getCards();

			if (lastCards.size() > 0)
			{
				MusicCard lastCard = (MusicCard) lastCards.get(lastCards.size() - 1);
				if (lastCard.getSong().getArtist().equals(song.getArtist()) && lastStack.getCards().size() % 5 != 0)
				{
					mCardView.addCardToLastStack(new MusicCard(song));
					return;
				}
			}
		}

		makeNewStack(song);

	}

	private void makeNewStack(Song song)
	{
		MusicCard lastCard = null;
		if (lastStack != null)
		{ArrayList<Card> lastCards = lastStack.getCards();
		lastCard = (MusicCard) lastCards.get(lastCards.size() - 1);}
		CardStack newStack = new CardStack();
		if (lastCard != null && !lastCard.getSong().getArtist().equals(song.getArtist()))
			newStack.setTitle(song.getArtist());
		newStack.add(new MusicCard(song));
		mCardView.addStack(newStack);
		lastStack = newStack;
	}
	
}
